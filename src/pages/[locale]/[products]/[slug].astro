---
import Container from "@/components/container.astro";
import Footer from "@/components/footer.astro";
import GalleryModal from "@/components/gallery-modal.astro";
import Header from "@/components/header.astro";
import Hexagon from "@/components/hexagon.astro";
import { $t, locales, resolvePropByLocale } from "@/i18n";
import Layout from "@/layouts/Layout.astro";
import { Image } from "astro:assets";
import { getCollection, getEntry } from "astro:content";
import { marked } from "marked";
import Logo from "~icons/local/logo";
import PDFIcon from "~icons/mdi/file-pdf";

export async function getStaticPaths() {
  const products = await getCollection("products");
  return locales.flatMap((locale) => {
    return products.map((product) => {
      return {
        params: {
          locale,
          products: $t("routes.products.page", locale),
          slug: product.slug,
        },
      };
    });
  });
}

const page = "produtos";

const { locale, slug } = Astro.params;

const product = await getEntry("products", slug);
const hasSubproducts =
  !!product.data.subproducts && product.data.subproducts.length > 0;

const hasManuals = !!product.data.manuals && product.data.manuals.length > 0;

const description =
  resolvePropByLocale(product.data, "body" as any, locale) ?? product.body;
const Description = await marked(description);

const youtubeId =
  product.data.youtube &&
  (product.data.youtube.startsWith("http")
    ? product.data.youtube.split("v=").pop()
    : product.data.youtube);

const resolvePublicPath = (path: string) => {
  return path.startsWith("/public") ? path.replace("/public", "") : path;
};
---

<Layout colored title={$t("routes.products.title", locale)}>
  <Header colored locale={locale} page={page} />

  <Container class="my-16 md:my-28 p-1">
    <section class="flex items-center">
      <div class="lg:-ml-2">
        <h1
          class="uppercase font-bold text-lg md:text-4xl lg:text-6xl text-white"
        >
          {resolvePropByLocale(product.data, "title", locale)}
        </h1>
        <Logo class="w-[100px] md:w-[200px] h-10 md:h-20 text-white md:mt-4" />
      </div>
      {
        product.data.images.slice(0, 3).map((image, index) => (
          <div
            class="text-border-primary"
            transition:name={`product-${product.slug}-${index}`}
          >
            <Hexagon
              size="3xl"
              class:list={["hidden lg:flex", index > 0 && "-ml-12"]}
            >
              <Image
                class={
                  image.height < image.width ? "h-full w-auto" : "w-full h-auto"
                }
                src={image}
                alt={product.data.title}
              />
            </Hexagon>
            <Hexagon
              size="lg"
              class:list={["hidden md:flex lg:hidden", index > 0 && "-ml-8"]}
            >
              <Image
                class={
                  image.height < image.width ? "h-full w-auto" : "w-full h-auto"
                }
                src={image}
                alt={product.data.title}
              />
            </Hexagon>
            <Hexagon
              size="xxs"
              class:list={["flex md:hidden", index > 0 && "-ml-4"]}
            >
              <Image
                class={
                  image.height < image.width ? "h-full w-auto" : "w-full h-auto"
                }
                src={image}
                alt={product.data.title}
              />
            </Hexagon>
          </div>
        ))
      }
    </section>

    <section
      class="space-y-4 text-white leading-relaxed mt-4 md:mt-12 md:text-lg"
      set:html={Description}
    />

    <h2 class="mt-12 text-xl md:text-4xl uppercase text-white font-bold">
      {$t("products.applications", locale)}:
    </h2>

    <ul class="mt-4 text-white">
      {
        product.data.applications.map((application) => (
          <li class="flex items-center space-x-2 md:text-lg">
            <span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-2 w-2"
                viewBox="0 0 20 20"
                fill="currentColor"
              >
                <circle cx="10" cy="10" r="10" />
              </svg>
            </span>
            <span>{application}</span>
          </li>
        ))
      }
    </ul>

    {
      hasManuals && (
        <section>
          <h2 class="mt-12 text-xl md:text-4xl uppercase text-white font-bold">
            {$t("products.manuals", locale)}:
          </h2>
          {product.data.manuals?.map(({ title, link }) => (
            <div class="flex items-center mt-4">
              <PDFIcon class="size-6 text-white mr-2" />
              <a
                class="text-white"
                href={resolvePublicPath(link)}
                target="_blank"
                rel="noopener noreferrer"
              >
                {title}
              </a>
            </div>
          ))}
        </section>
      )
    }

    {
      youtubeId && (
        <iframe
          class="w-full h-auto aspect-video pr-2 mt-12"
          width="560"
          height="315"
          src={`https://www.youtube.com/embed/${youtubeId}`}
          title="YouTube video player"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
          allowfullscreen
        />
      )
    }

    {
      (
        <div class="mt-12">
          <GalleryModal>
            {product.data.images.map((image) => (
              <div class="flex items-center justify-center cursor-pointer">
                <Hexagon size="3xl">
                  <Image
                    class={
                      image.height < image.width
                        ? "h-full w-auto"
                        : "w-full h-auto"
                    }
                    src={image}
                    alt={product.data.title}
                  />
                </Hexagon>
              </div>
            ))}

            {product.data.images.map((image) => (
              <Image
                class={
                  image.height > image.width ? "h-full w-auto" : "w-full h-auto"
                }
                src={image}
                alt={product.data.title}
                slot="gallery"
              />
            ))}
          </GalleryModal>
        </div>
      )
    }

    {
      hasSubproducts &&
        product.data.subproducts?.map((subproduct) => (
          <div class="mt-16">
            <h2 class="uppercase font-bold text-2xl lg:text-4xl text-white underline underline-offset-8">
              {resolvePropByLocale(subproduct, "title", locale)}
            </h2>

            <div class="mt-12">
              <GalleryModal>
                {subproduct.images.map((image) => (
                  <div class="flex items-center justify-center cursor-pointer">
                    <Hexagon size="3xl">
                      <Image
                        class={
                          image.height < image.width
                            ? "h-full w-auto"
                            : "w-full h-auto"
                        }
                        src={image}
                        alt={subproduct.title}
                      />
                    </Hexagon>
                  </div>
                ))}

                {subproduct.images.map((image) => (
                  <Image
                    class={
                      image.height > image.width
                        ? "h-full w-auto"
                        : "w-full h-auto"
                    }
                    src={image}
                    alt={subproduct.title}
                    slot="gallery"
                  />
                ))}
              </GalleryModal>
            </div>
          </div>
        ))
    }
  </Container>

  <Footer colored />
</Layout>
