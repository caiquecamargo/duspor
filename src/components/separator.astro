---
type Props = {
  text?: string;
  href?: string;
  class?: string;
  containerClass?: string;
  icon?: any;
  colored?: boolean;
  external?: boolean;
};

const {
  text,
  class: _class,
  containerClass,
  href,
  icon: Icon,
  colored = false,
  external = false,
} = Astro.props;

const Anchor = href ? "a" : "div";
---

<div
  class:list={[
    "my-12 md:my-20",
    colored ? "text-gray-400" : "text-primary",
    containerClass,
  ]}
>
  <Anchor href={href} target={external ? "_blank" : "_self"}>
    <div
      class:list={[
        "separator flex justify-center items-center group",
        href ? "hover:text-black" : "",
        _class,
      ]}
    >
      {
        text && (
          <div
            class:list={[
              "flex-shrink-0 flex items-center px-4 md:px-6 py-2 md:py-3  group-hover:bg-black text-white uppercase font-bold md:text-3xl",
              colored ? "bg-gray-400" : "bg-primary",
            ]}
          >
            {Icon && <Icon class="w-6 md:w-10 h-6 md:h-10 mr-2" />}
            {text}
          </div>
        )
      }
    </div>
  </Anchor>
</div>

<style is:global>
  .separator::before,
  .separator::after {
    content: "";
    display: block;
    height: 0.1rem;
    flex-grow: 1;
  }

  @media screen and (min-width: 768px) {
    .separator::before,
    .separator::after {
      height: 0.15rem;
    }
  }

  .separator::before {
    background: linear-gradient(to right, rgba(255, 255, 255, 0), currentColor);
  }

  .separator::after {
    background: linear-gradient(to left, rgba(255, 255, 255, 0), currentColor);
  }
</style>
