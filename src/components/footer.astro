---
import { getEntry } from "astro:content";
import Fa6BrandsLinkedinIn from "~icons/fa6-brands/linkedin-in";
import MaterialSymbolsLocationOnOutlineRounded from "~icons/material-symbols/location-on-outline-rounded";
import PhInstagramLogo from "~icons/ph/instagram-logo";
import TypcnSocialFacebook from "~icons/typcn/social-facebook";
import BaseFooter from "./base-footer.astro";

type Props = {
  colored?: boolean;
  class?: string;
};

const { colored = false, class: _class } = Astro.props;

const config = await getEntry("config", "index");

const links = [
  {
    href: config.data.address.maps,
    icon: MaterialSymbolsLocationOnOutlineRounded,
    label: config.data.address.address,
  },
  {
    href: config.data.instagram.url,
    icon: PhInstagramLogo,
    label: config.data.instagram.arroba,
  },
  {
    href: config.data.facebook.url,
    icon: TypcnSocialFacebook,
    label: config.data.facebook.arroba,
  },
  {
    href: config.data.linkedin.url,
    icon: Fa6BrandsLinkedinIn,
    label: config.data.linkedin.arroba,
  },
];
---

<BaseFooter class:list={["mt-24 !justify-center", _class]}>
  <div
    class:list={["flex space-x-4", colored ? "text-white" : "text-primary"]}
    slot="center"
  >
    {
      links.map((link) => (
        <a
          class:list={[
            "flex items-center group",
            colored ? "hover:text-black" : "",
          ]}
          href={link.href}
          target="_blank"
        >
          <div
            class:list={[
              "rounded-full p-[0.3rem] mr-2 bg-black",
              colored ? "text-white" : "group-hover:bg-primary text-white",
            ]}
          >
            <link.icon class="w-6 h-6" />
          </div>
          {link.label}
        </a>
      ))
    }
  </div>
</BaseFooter>
